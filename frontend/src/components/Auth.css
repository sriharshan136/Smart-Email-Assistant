.auth-container {
  max-width: 450px;
  margin: 70px auto;
  background: #13151f;
  padding: 3.5rem;
  border-radius: 24px;
  box-shadow: 0px 20px 50px rgba(0, 0, 0, 0.4);
  color: #e4e6f1;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  text-align: center;
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

.auth-container::before {
  content: '';
  position: absolute;
  top: -100%;
  left: -100%;
  width: 300%;
  height: 300%;
  background: radial-gradient(
    circle at center,
    rgba(110, 142, 251, 0.08) 0%,
    rgba(167, 119, 227, 0.08) 40%,
    rgba(13, 15, 19, 0) 70%
  );
  animation: rotateGradient 20s linear infinite;
  z-index: 0;
}

@keyframes rotateGradient {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.auth-content {
  position: relative;
  z-index: 1;
}

.auth-container h2 {
  margin-bottom: 2rem;
  font-size: 2.6rem;
  font-weight: 800;
  background: linear-gradient(90deg, #6e8efb, #a777e3, #ff7eb3);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  letter-spacing: -1px;
}

.auth-container form {
  display: flex;
  flex-direction: column;
  gap: 1rem; /* Reduced gap */
}

.input-group {
  position: relative;
  text-align: left;
}

.auth-container label {
  text-align: left;
  font-weight: 500;
  color: #a2a5b9;
  font-size: 0.95rem;
  margin-bottom: 0.5rem;
  display: block;
  transition: color 0.3s;
  letter-spacing: 0.5px;
}

.auth-container input {
  width: 100%;
  padding: 1.4rem;
  padding-left: 3.5rem;
  background: rgba(21, 23, 35, 0.7);
  border: 1.5px solid #2a2e42;
  border-radius: 14px;
  font-size: 1rem;
  color: #e4e6f1;
  transition: all 0.3s;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15);
}

.auth-container input:focus {
  outline: none;
  border-color: #6e8efb;
  box-shadow: 0 0 0 4px rgba(110, 142, 251, 0.15);
  background: rgba(25, 28, 41, 0.9);
}

.input-icon {
  position: absolute;
  left: 1.25rem;
  top: 50%; /* Center vertically */
  transform: translateY(-50%);
  color: #6e8efb;
  opacity: 0.7;
  transition: all 0.3s;
  font-size: 1.25rem;
}

.input-group:focus-within .input-icon {
  opacity: 1;
  transform: translateY(-50%) scale(1.1);
}

.input-group:focus-within label {
  color: #6e8efb;
}

.auth-container button {
  padding: 1.4rem;
  background: linear-gradient(135deg, #6e8efb, #a777e3, #ff7eb3);
  background-size: 300% 300%;
  color: #fff;
  border: none;
  border-radius: 14px;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.5s;
  box-shadow: 0 10px 25px rgba(110, 142, 251, 0.5);
  margin-top: 1.5rem;
  animation: gradientShift 8s ease infinite;
  letter-spacing: 0.5px;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.auth-container button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  transform: translateX(-100%);
  transition: transform 0.6s;
  z-index: -1;
}

.auth-container button:hover {
  transform: translateY(-6px);
  box-shadow: 0 15px 30px rgba(110, 142, 251, 0.6);
}

.auth-container button:hover::before {
  transform: translateX(0);
}

.auth-container button:active {
  transform: translateY(-3px);
}

.auth-container .link-text {
  margin-top: 2rem;
  color: #a2a5b9;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.auth-container .link-text a {
  color: #6e8efb;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s;
  display: inline-block;
  position: relative;
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
}

.auth-container .link-text a::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 2px;
  bottom: 0;
  left: 0;
  background: linear-gradient(90deg, #6e8efb, #a777e3);
  transform: scaleX(0);
  transform-origin: center;
  transition: transform 0.3s ease;
}

.auth-container .link-text a:hover {
  color: #a777e3;
  background: rgba(110, 142, 251, 0.1);
}

.auth-container .link-text a:hover::after {
  transform: scaleX(1);
}

.auth-container .error {
  color: #ff5d6e;
  font-size: 0.9rem;
  padding: 0.75rem 1rem;
  background: rgba(255, 93, 110, 0.1);
  border-radius: 10px;
  margin-top: 0.5rem;
  border-left: 3px solid #ff5d6e;
  text-align: left;
  animation: errorPulse 2s infinite;
}

@keyframes errorPulse {
  0% { box-shadow: 0 0 0 0 rgba(255, 93, 110, 0.2); }
  70% { box-shadow: 0 0 0 6px rgba(255, 93, 110, 0); }
  100% { box-shadow: 0 0 0 0 rgba(255, 93, 110, 0); }
}

.auth-logo {
  margin-bottom: 2rem;
  width: 80px;
  height: 80px;
  margin: 0 auto 2rem;
  position: relative;
}

.auth-logo-circle {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: linear-gradient(135deg, #6e8efb, #a777e3);
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 10px 20px rgba(110, 142, 251, 0.5);
  position: relative;
  overflow: hidden;
}

.auth-logo-circle::before {
  content: '';
  position: absolute;
  width: 140%;
  height: 140%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transform: rotate(45deg) translateX(-100%);
  animation: shimmer 3s infinite;
}

@keyframes shimmer {
  0% { transform: rotate(45deg) translateX(-100%); }
  100% { transform: rotate(45deg) translateX(100%); }
}

.auth-logo-inner {
  width: 65%;
  height: 65%;
  border-radius: 50%;
  background: #13151f;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}

.auth-logo-dot {
  width: 35%;
  height: 35%;
  border-radius: 50%;
  background: linear-gradient(135deg, #6e8efb, #a777e3);
  position: relative;
}

.auth-logo-dot::after {
  content: '';
  position: absolute;
  top: -5px;
  right: -5px;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: #ff7eb3;
  box-shadow: 0 0 10px rgba(255, 126, 179, 0.7);
}

.auth-container .button-icon {
  margin-left: 10px;
  vertical-align: middle;
  transition: transform 0.3s;
}

.auth-container button:hover .button-icon {
  transform: translateX(4px);
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.page-transition {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #13151f;
  z-index: 100;
}

/* Floating particles */
.floating-particle {
  position: absolute;
  border-radius: 50%;
  z-index: 0;
  opacity: 0.5;
  pointer-events: none;
  animation: float 15s linear infinite;
}

@keyframes float {
  0% { transform: translateY(0) translateX(0) rotate(0deg); }
  33% { transform: translateY(-50px) translateX(20px) rotate(120deg); }
  66% { transform: translateY(-20px) translateX(-20px) rotate(240deg); }
  100% { transform: translateY(0) translateX(0) rotate(360deg); }
}

/* Noise overlay */
.noise-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.05'/%3E%3C/svg%3E");
  opacity: 0.2;
  pointer-events: none;
  z-index: 1;
}

/* Updated checkbox container to display items in a row */
.checkbox-container {
  display: inline-flex; /* inline-flex will keep the container inline with surrounding text */
  align-items: center;
  cursor: pointer;
  user-select: none;
}

/* Hide the native checkbox */
.checkbox-container input {
  position: absolute;
  opacity: 0;
  height: 0;
  width: 0;
}

/* Style the custom checkmark */
.checkmark {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: 20px;
  width: 20px;
  background-color: rgba(21, 23, 35, 0.7);
  border: 1.5px solid #2a2e42;
  border-radius: 6px;
  margin-right: 8px; /* spacing between checkbox and text */
  transition: all 0.3s;
}

/* When hovering over the container, adjust the border color */
.checkbox-container:hover input ~ .checkmark {
  border-color: #6e8efb;
}

/* When checked, change the background and border color */
.checkbox-container input:checked ~ .checkmark {
  background-color: #6e8efb;
  border-color: #6e8efb;
}

/* Add a checkmark symbol when checked */
.checkmark:after {
  content: "";
  display: none;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

/* Ensure the label text sits inline next to the checkmark */
.label-text {
  display: inline-block;
  color: #a2a5b9;
  font-size: 0.9rem;
}
